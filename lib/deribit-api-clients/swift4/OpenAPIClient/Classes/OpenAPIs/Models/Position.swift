//
// Position.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct Position: Codable {

    public enum Direction: String, Codable {
        case buy = "buy"
        case sell = "sell"
    }
    public enum Kind: String, Codable {
        case future = "future"
        case option = "option"
    }
    /** direction, &#x60;buy&#x60; or &#x60;sell&#x60; */
    public var direction: Direction
    /** Only for options, average price in USD */
    public var averagePriceUsd: Double?
    /** Only for futures, estimated liquidation price */
    public var estimatedLiquidationPrice: Double?
    /** Floating profit or loss */
    public var floatingProfitLoss: Double
    /** Only for options, floating profit or loss in USD */
    public var floatingProfitLossUsd: Double?
    /** Open orders margin */
    public var openOrdersMargin: Double
    /** Profit or loss from position */
    public var totalProfitLoss: Double
    /** Realized profit or loss */
    public var realizedProfitLoss: Double?
    /** Delta parameter */
    public var delta: Double
    /** Initial margin */
    public var initialMargin: Double
    /** Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC) */
    public var size: Double
    /** Maintenance margin */
    public var maintenanceMargin: Double
    /** Instrument kind, &#x60;\&quot;future\&quot;&#x60; or &#x60;\&quot;option\&quot;&#x60; */
    public var kind: Kind
    /** Current mark price for position&#39;s instrument */
    public var markPrice: Double
    /** Average price of trades that built this position */
    public var averagePrice: Double
    /** Last settlement price for position&#39;s instrument 0 if instrument wasn&#39;t settled yet */
    public var settlementPrice: Double
    /** Current index price */
    public var indexPrice: Double
    /** Unique instrument identifier */
    public var instrumentName: String
    /** Only for futures, position size in base currency */
    public var sizeCurrency: Double?

    public init(direction: Direction, averagePriceUsd: Double?, estimatedLiquidationPrice: Double?, floatingProfitLoss: Double, floatingProfitLossUsd: Double?, openOrdersMargin: Double, totalProfitLoss: Double, realizedProfitLoss: Double?, delta: Double, initialMargin: Double, size: Double, maintenanceMargin: Double, kind: Kind, markPrice: Double, averagePrice: Double, settlementPrice: Double, indexPrice: Double, instrumentName: String, sizeCurrency: Double?) {
        self.direction = direction
        self.averagePriceUsd = averagePriceUsd
        self.estimatedLiquidationPrice = estimatedLiquidationPrice
        self.floatingProfitLoss = floatingProfitLoss
        self.floatingProfitLossUsd = floatingProfitLossUsd
        self.openOrdersMargin = openOrdersMargin
        self.totalProfitLoss = totalProfitLoss
        self.realizedProfitLoss = realizedProfitLoss
        self.delta = delta
        self.initialMargin = initialMargin
        self.size = size
        self.maintenanceMargin = maintenanceMargin
        self.kind = kind
        self.markPrice = markPrice
        self.averagePrice = averagePrice
        self.settlementPrice = settlementPrice
        self.indexPrice = indexPrice
        self.instrumentName = instrumentName
        self.sizeCurrency = sizeCurrency
    }

    public enum CodingKeys: String, CodingKey { 
        case direction
        case averagePriceUsd = "average_price_usd"
        case estimatedLiquidationPrice = "estimated_liquidation_price"
        case floatingProfitLoss = "floating_profit_loss"
        case floatingProfitLossUsd = "floating_profit_loss_usd"
        case openOrdersMargin = "open_orders_margin"
        case totalProfitLoss = "total_profit_loss"
        case realizedProfitLoss = "realized_profit_loss"
        case delta
        case initialMargin = "initial_margin"
        case size
        case maintenanceMargin = "maintenance_margin"
        case kind
        case markPrice = "mark_price"
        case averagePrice = "average_price"
        case settlementPrice = "settlement_price"
        case indexPrice = "index_price"
        case instrumentName = "instrument_name"
        case sizeCurrency = "size_currency"
    }


}

