//
// Instrument.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct Instrument: Codable {

    public enum QuoteCurrency: String, Codable {
        case usd = "USD"
    }
    public enum Kind: String, Codable {
        case future = "future"
        case option = "option"
    }
    public enum OptionType: String, Codable {
        case call = "call"
        case put = "put"
    }
    public enum SettlementPeriod: String, Codable {
        case month = "month"
        case week = "week"
        case perpetual = "perpetual"
    }
    public enum BaseCurrency: String, Codable {
        case btc = "BTC"
        case eth = "ETH"
    }
    /** The currency in which the instrument prices are quoted. */
    public var quoteCurrency: QuoteCurrency
    /** Instrument kind, &#x60;\&quot;future\&quot;&#x60; or &#x60;\&quot;option\&quot;&#x60; */
    public var kind: Kind
    /** specifies minimal price change and, as follows, the number of decimal places for instrument prices */
    public var tickSize: Double
    /** Contract size for instrument */
    public var contractSize: Int
    /** Indicates if the instrument can currently be traded. */
    public var isActive: Bool
    /** The option type (only for options) */
    public var optionType: OptionType?
    /** Minimum amount for trading. For perpetual and futures - in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH. */
    public var minTradeAmount: Double
    /** Unique instrument identifier */
    public var instrumentName: String
    /** The settlement period. */
    public var settlementPeriod: SettlementPeriod
    /** The strike value. (only for options) */
    public var strike: Double?
    /** The underlying currency being traded. */
    public var baseCurrency: BaseCurrency
    /** The time when the instrument was first created (milliseconds) */
    public var creationTimestamp: Int
    /** The time when the instrument will expire (milliseconds) */
    public var expirationTimestamp: Int

    public init(quoteCurrency: QuoteCurrency, kind: Kind, tickSize: Double, contractSize: Int, isActive: Bool, optionType: OptionType?, minTradeAmount: Double, instrumentName: String, settlementPeriod: SettlementPeriod, strike: Double?, baseCurrency: BaseCurrency, creationTimestamp: Int, expirationTimestamp: Int) {
        self.quoteCurrency = quoteCurrency
        self.kind = kind
        self.tickSize = tickSize
        self.contractSize = contractSize
        self.isActive = isActive
        self.optionType = optionType
        self.minTradeAmount = minTradeAmount
        self.instrumentName = instrumentName
        self.settlementPeriod = settlementPeriod
        self.strike = strike
        self.baseCurrency = baseCurrency
        self.creationTimestamp = creationTimestamp
        self.expirationTimestamp = expirationTimestamp
    }

    public enum CodingKeys: String, CodingKey { 
        case quoteCurrency = "quote_currency"
        case kind
        case tickSize = "tick_size"
        case contractSize = "contract_size"
        case isActive = "is_active"
        case optionType = "option_type"
        case minTradeAmount = "min_trade_amount"
        case instrumentName = "instrument_name"
        case settlementPeriod = "settlement_period"
        case strike
        case baseCurrency = "base_currency"
        case creationTimestamp = "creation_timestamp"
        case expirationTimestamp = "expiration_timestamp"
    }


}

