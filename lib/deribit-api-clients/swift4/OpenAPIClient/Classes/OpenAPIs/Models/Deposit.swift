//
// Deposit.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct Deposit: Codable {

    public enum State: String, Codable {
        case pending = "pending"
        case completed = "completed"
        case rejected = "rejected"
        case replaced = "replaced"
    }
    public enum Currency: String, Codable {
        case btc = "BTC"
        case eth = "ETH"
    }
    /** The timestamp (seconds since the Unix epoch, with millisecond precision) */
    public var updatedTimestamp: Int
    /** Deposit state, allowed values : &#x60;pending&#x60;, &#x60;completed&#x60;, &#x60;rejected&#x60;, &#x60;replaced&#x60; */
    public var state: State
    /** The timestamp (seconds since the Unix epoch, with millisecond precision) */
    public var receivedTimestamp: Int
    /** Currency, i.e &#x60;\&quot;BTC\&quot;&#x60;, &#x60;\&quot;ETH\&quot;&#x60; */
    public var currency: Currency
    /** Address in proper format for currency */
    public var address: String
    /** Amount of funds in given currency */
    public var amount: Double
    /** Transaction id in proper format for currency, &#x60;null&#x60; if id is not available */
    public var transactionId: String

    public init(updatedTimestamp: Int, state: State, receivedTimestamp: Int, currency: Currency, address: String, amount: Double, transactionId: String) {
        self.updatedTimestamp = updatedTimestamp
        self.state = state
        self.receivedTimestamp = receivedTimestamp
        self.currency = currency
        self.address = address
        self.amount = amount
        self.transactionId = transactionId
    }

    public enum CodingKeys: String, CodingKey { 
        case updatedTimestamp = "updated_timestamp"
        case state
        case receivedTimestamp = "received_timestamp"
        case currency
        case address
        case amount
        case transactionId = "transaction_id"
    }


}

